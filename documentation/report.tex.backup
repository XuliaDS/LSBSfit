\documentclass[a4paper,12pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{tabularx}
\usepackage{amssymb}
\usepackage{hhline}
\usepackage{graphicx}
\usepackage{pstricks-add}
\newcommand{\intinf}{\int_{-\infty}^{\infty}}
\newcommand{\sumg}{\sum_{\gamma=0}^{2k}}
\newcommand{\spl}{\psi^{(k+1)}}
\usepackage{pgf,tikz}
%\usepackage[toc,page]{appendix}
%
% \usetikzlibrary{arrows}
\usepackage{rotating}
\usepackage{lscape}
\usepackage{epstopdf}
\newtheorem{theorem}{Theorem}[section]
\newtheorem{definition}{Definition}[section]
\usepackage{enumerate}% http://ctan.org/pkg/enumerate
\usepackage{pgf,tikz}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{pdflscape}
\bibliographystyle{plain} % or: "chicago"
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\newtheorem{note}{Note}[section]
\usepackage{amssymb}
\usepackage{graphicx}
\usepackage{pstricks-add}
\usepackage{float}    
%\usepackage{multirow}
\newtheorem{proposition}{Proposition}
\newtheorem{lemma}{Lemma}
\setcounter{section}{0}
\usepackage{listings}
\author{Julia Docampo}
\newcommand{\xin}{x_{i-\frac 12}}
\newcommand{\xip}{x_{i+\frac 12}}
\usepackage{pgf,tikz}
\usetikzlibrary{arrows}
\usetikzlibrary{decorations.markings}
\usepackage{rotating}
\usepackage{lscape}
\usepackage{epstopdf}
\newtheorem{lema}{Lemma}[section]
\newtheorem{remark}{Remark}[section]
\newtheorem{corollary}{Corollary}[section]
%\usepackage{subfig}
%\newtheorem{proposition}{Proposition}[section]
\usepackage{enumerate}% http://ctan.org/pkg/enumerate
\newcommand*{\QEDA}{\hfill\ensuremath{\blacksquare}}%
\newcommand*{\QEDB}{\hfill\ensuremath{\square}}%
\usepackage{pgf,tikz}
\usetikzlibrary{positioning,arrows}
\usepackage{natbib}
\usepackage{etex}

\usepackage{color}
 
 \begin{document}
 
 
 \section{Introduction}
 \section{Defining the Problem}
 Curve and surface modeling play a major role in Reverse Engineering during object reconstruction
  through CAD software \cite{Ma1998, sarkar1991} or for CFD simulations involving moving
  interfaces such as flame propagation problems \cite{malladi1995}. 
  Usually, one has access only to a discrete (finite) data set 
  and a smooth curve (surface) is needed in order to perform operations such as numerical integration or differentiation. 
  Although not unique, the solution to this problem is generally sought as a spline curve (surface)  
  that either interpolates or provides an approximation which is \emph{closest} to the data.  
   An approximation \emph{fit} is desirable for experimental measurements or computational data 
   which may be slightly inaccurate or noisy whereas an interpolating approach \cite{piegl1999,ma1995} 
   is more suitable when
   the data (or part of it) is known to be exact. This paper focuses on 
   approximation techniques since the algorithm presented here was developed for 
    curve reconstruction on numerical solutions on aircraft icing accretion \cite{}. 
    
    Defining a spline implies fixing an approximation degree, 
    finding its control points (net) and knot sequence.  The ideal spline \emph{fit} is a function 
     that minimizes the error (under certain metric) employing a minimum number 
     of knots (control points).  Unfortunately, this represents a great challenge since both the ``optimal'' number of control points 
  and knot location are unknown and in general, it is not possible to derive explicit formulas \cite{jupp1978}.  
  Thus, the solution is found by casting a suitable optimization problem, 
  usually based on the least-squares minimization \cite{nurbs_book, deboor2001practical, schumaker2015spline}. 
   The methodology proposed here attempts to solve the \emph{minimal} spline problem 
   from a heuristic approach, where knots are strategically introduced 
   as part of an iterative scheme that drives the solution towards a desired accuracy. 
      
  The simplest solution to the spline least-squares optimization problem is to fix the number of control points,
  prescribe a knot sequence alongside a suitable curve parametrization and solve a linear system for the 
  control points \cite[Ch. 9.4]{nurbs_book}, \cite{deboor1968}. 
  The usual parametrization choices are based on the chord-length or centripetal models  which 
  have proven to improve the quality of the approximation \cite{hoschek1988,speer1998,lee1989, ma1995}, 
  especially for detection of sharp features. 
  On the other hand, a fixed knot sequence may be too oversimplified and 
  shape manipulation (knot insertion/removal) \cite{piegl1989, boehm1980, goldman1992} 
   can be introduced as part of an error controlled iterative scheme; 
   one can continuously insert new knots and solve a new least-squares problem until a specified tolerance is attained
    \cite{piegl2000, park2007}. Alternatively, one can  initially set a large number of control points and remove knots successively until the 
     quality of the approximation is destroyed \cite{lyche1987, tiller1992}. 
   Ultimately, the problem can be formulated as a non-linear optimization, allowing 
   ``free knots'' as part of the least-squares solution \cite{schwetlick1995least, beliakov2004}. 
   The free-knots problem generally yields to better results but this occurs at the expense 
   of computational efficiency \cite{randrzanarivony2002} and in addition, it can result 
   in many stationary points \cite{jupp1978}. 

   This paper presents a new algorithm that combines 
   a least squares solver together with an error controlled knot insertion. 
   Starting with the minimum number of control points, at each iteration it 
    attempts to insert a new knot at the span with highest weighted error. 
    If the new approximation is accepted by the tolerance step, the knot sequence is updated. 
    Otherwise, the knot is rejected and a new knot is inserted at the span with 
    next highest weighted error. If none of the new knots overcome 
    the tolerance step, the scheme proceeds with the \emph{best} candidate. This knot is tagged 
   and new knots are computed until a valid step is found. Before updating, starting from the tagged location, 
   it attempts to remove any possible \emph{redundant} knots. 
   The algorithm stops when (1) the global error has reach certain tolerance, 
   (2) it has reached the maximum number of iterations or (3) no new knots can improve the current approximation. 
  Although we cannot prove that the number of control points is optimal, 
  our results suggest that this knot distribution leads to accurate results
  remaining at relatively low computational costs, thus becoming a 
  suitable tool for engineering applications. 
  
   
   In the following sections we discuss the different aspects of our method. Section \ref{} defines 
   the algorithm building blocks: Bspline functions, 
   least squares approximation and the ``best knot'' sequence problem. 
   In section \ref{} implementation details are given and section 
   \ref{} shows the results of applying this tool on several data  types 
   including curve fitting on noisy noisy data as well as ice-layer reconstruction. 
   Finally,  in section \ref{}  we conclude and highlight the areas for improvement as well as future applications.
 
 
   
  




\bibliography{biblio}
 
 
 

 
 
\end{document}

 